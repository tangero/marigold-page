#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Gener√°tor denn√≠ch archivn√≠ch str√°nek pro tech-news
Vytvo≈ô√≠ str√°nku pro ka≈æd√Ω den, kde existuj√≠ ƒçl√°nky
"""

import os
import yaml
from pathlib import Path
from datetime import datetime
from collections import defaultdict

def generate_daily_pages():
    """Generuje str√°nky pro ka≈æd√Ω den s ƒçl√°nky"""

    # Cesty
    tech_news_dir = Path('_tech_news')
    pages_dir = Path('tech-news')

    if not tech_news_dir.exists():
        print("‚ö†Ô∏è Adres√°≈ô _tech_news neexistuje")
        return

    # Smazat star√© denn√≠ str√°nky
    if pages_dir.exists():
        # Smazat pouze denn√≠ str√°nky (form√°t YYYY-MM-DD)
        for file in pages_dir.glob('*/index.md'):
            parent = file.parent.name
            if len(parent) == 10 and parent[4] == '-' and parent[7] == '-':
                try:
                    file.unlink()
                    file.parent.rmdir()
                    print(f"üóëÔ∏è Smaz√°na star√° str√°nka: {parent}")
                except:
                    pass

    # Naƒç√≠st v≈°echny ƒçl√°nky a seskupit podle data
    articles_by_date = defaultdict(list)

    for article_file in tech_news_dir.glob('*.md'):
        with open(article_file, 'r', encoding='utf-8') as f:
            content = f.read()

        # Extrahovat front matter
        if content.startswith('---'):
            parts = content.split('---', 2)
            if len(parts) >= 3:
                try:
                    front_matter = yaml.safe_load(parts[1])

                    # Z√≠skat datum z publishedAt nebo date
                    date_str = None
                    if 'publishedAt' in front_matter:
                        date_obj = datetime.fromisoformat(front_matter['publishedAt'].replace('Z', '+00:00'))
                        date_str = date_obj.strftime('%Y-%m-%d')
                    elif 'date' in front_matter:
                        if isinstance(front_matter['date'], str):
                            date_obj = datetime.fromisoformat(front_matter['date'].split(' ')[0])
                        else:
                            date_obj = front_matter['date']
                        date_str = date_obj.strftime('%Y-%m-%d')

                    if date_str:
                        articles_by_date[date_str].append(article_file.name)

                except Exception as e:
                    print(f"‚ö†Ô∏è Chyba p≈ôi zpracov√°n√≠ {article_file.name}: {e}")

    # Vytvo≈ôit str√°nku pro ka≈æd√Ω den
    created_count = 0
    for date_str, articles in articles_by_date.items():
        # Vytvo≈ôit adres√°≈ô pro tento den
        day_dir = pages_dir / date_str
        day_dir.mkdir(parents=True, exist_ok=True)

        # Vytvo≈ôit index.md pro tento den
        index_file = day_dir / 'index.md'

        # Front matter pro denn√≠ str√°nku
        front_matter = {
            'layout': 'tech_news_day',
            'title': f'Technologick√© zpr√°vy - {date_str}',
            'date': date_str,
            'permalink': f'/tech-news/{date_str}/'
        }

        # Vytvo≈ôit obsah str√°nky
        content = f"""---
{yaml.dump(front_matter, default_flow_style=False, allow_unicode=True)}---

<!-- Tato str√°nka automaticky zobrazuje ƒçl√°nky z kolekce _tech_news pro datum {date_str} -->
<!-- Layout tech_news_day se postar√° o zobrazen√≠ ƒçl√°nk≈Ø -->
"""

        # Zapsat soubor
        with open(index_file, 'w', encoding='utf-8') as f:
            f.write(content)

        created_count += 1
        print(f"‚úÖ Vytvo≈ôena str√°nka pro {date_str} ({len(articles)} ƒçl√°nk≈Ø)")

    print(f"\nüéâ Celkem vytvo≈ôeno {created_count} denn√≠ch str√°nek")

    # Vytvo≈ôit hlavn√≠ index.md pokud neexistuje
    main_index = pages_dir / 'index.md'
    if not main_index.exists():
        main_content = """---
layout: tech_news_index
title: Technologick√© zpr√°vy
permalink: /tech-news/
---

<!-- Hlavn√≠ str√°nka tech-news zobrazuj√≠c√≠ nejnovƒõj≈°√≠ ƒçl√°nky -->
"""
        with open(main_index, 'w', encoding='utf-8') as f:
            f.write(main_content)
        print("‚úÖ Vytvo≈ôena hlavn√≠ index str√°nka")

if __name__ == "__main__":
    generate_daily_pages()